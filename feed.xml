<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-03-01T16:53:01+08:00</updated><id>http://localhost:4000/feed.xml</id><entry><title type="html">No Marketing?</title><link href="http://localhost:4000/2024/03/01/Marketing.html" rel="alternate" type="text/html" title="No Marketing?" /><published>2024-03-01T00:00:00+08:00</published><updated>2024-03-01T00:00:00+08:00</updated><id>http://localhost:4000/2024/03/01/Marketing</id><content type="html" xml:base="http://localhost:4000/2024/03/01/Marketing.html">&lt;p&gt;Last month I finished the little webtool idea - at least enough that it worked. Of course doing a very barebones MVP generated an extremely long list of possible improvements. Not going to post the details, as I am not certain I’ll do anymore work on it. The result is out of my usual area so I’m not sure if its worth making it user-friendly and then marketing it. I doubt my ability to sell it and even if I did a good job, I have little confidence it would generate much income. So I’ll keep it on the back burner, and get to trying to create Godot prototype for now. Didn’t manage to properly start that task last month, just reading and prep, so time to get coding.&lt;/p&gt;

&lt;p&gt;This month:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Godot prototype&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Charles</name></author><category term="Posts" /><category term="ProgressReport" /><category term="DevDiary" /><summary type="html">Last month I finished the little webtool idea - at least enough that it worked. Of course doing a very barebones MVP generated an extremely long list of possible improvements. Not going to post the details, as I am not certain I’ll do anymore work on it. The result is out of my usual area so I’m not sure if its worth making it user-friendly and then marketing it. I doubt my ability to sell it and even if I did a good job, I have little confidence it would generate much income. So I’ll keep it on the back burner, and get to trying to create Godot prototype for now. Didn’t manage to properly start that task last month, just reading and prep, so time to get coding.</summary></entry><entry><title type="html">Alternatives</title><link href="http://localhost:4000/2024/02/02/Alternatives.html" rel="alternate" type="text/html" title="Alternatives" /><published>2024-02-02T00:00:00+08:00</published><updated>2024-02-02T00:00:00+08:00</updated><id>http://localhost:4000/2024/02/02/Alternatives</id><content type="html" xml:base="http://localhost:4000/2024/02/02/Alternatives.html">&lt;p&gt;I am becoming increasingly unimpressed with Javascript based gamedev. Perhaps it is time for trying another engine. In the meantime, I have been trying out Javascript for something it is very good at - websites. I reimplemented the SHD online feedback/stats engine using it in under a week. The tooling around JS is much better than I’m accustomed. Such a smooth process and it puts doing anything in Scala to shame. Now I am trying to create a tiny MVP web tool, it shouldn’t take too long. After that I’m going to try the &lt;a href=&quot;https://godotengine.org/&quot;&gt;Godot game engine&lt;/a&gt;. The buzz is that it has improved greatly over the last 6 months and my initial dismissal may no longer be valid. After that I just need to choose an engine and stick with it.&lt;/p&gt;

&lt;p&gt;This month:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Other non-game-prototype&lt;/li&gt;
  &lt;li&gt;Godot prototype&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Charles</name></author><category term="Posts" /><category term="ProgressReport" /><category term="DevDiary" /><summary type="html">I am becoming increasingly unimpressed with Javascript based gamedev. Perhaps it is time for trying another engine. In the meantime, I have been trying out Javascript for something it is very good at - websites. I reimplemented the SHD online feedback/stats engine using it in under a week. The tooling around JS is much better than I’m accustomed. Such a smooth process and it puts doing anything in Scala to shame. Now I am trying to create a tiny MVP web tool, it shouldn’t take too long. After that I’m going to try the Godot game engine. The buzz is that it has improved greatly over the last 6 months and my initial dismissal may no longer be valid. After that I just need to choose an engine and stick with it.</summary></entry><entry><title type="html">Nothing</title><link href="http://localhost:4000/2024/01/02/Coop.html" rel="alternate" type="text/html" title="Nothing" /><published>2024-01-02T00:00:00+08:00</published><updated>2024-01-02T00:00:00+08:00</updated><id>http://localhost:4000/2024/01/02/Coop</id><content type="html" xml:base="http://localhost:4000/2024/01/02/Coop.html">&lt;p&gt;So there was some progress, just nothing with gamedev. I worked on various admin and household tasks. For instance, I designed and built the chicken coop below.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/assets/posts/general/chicken_coop.png&quot; alt=&quot;Chicken coop&quot; /&gt;&lt;/center&gt;

&lt;p&gt;Last month, next month and the month after:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Typescript/Babylon.js tests and prototype&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Charles</name></author><category term="Posts" /><category term="ProgressReport" /><category term="DevDiary" /><summary type="html">So there was some progress, just nothing with gamedev. I worked on various admin and household tasks. For instance, I designed and built the chicken coop below.</summary></entry><entry><title type="html">Nothing</title><link href="http://localhost:4000/2023/12/01/Nothing.html" rel="alternate" type="text/html" title="Nothing" /><published>2023-12-01T00:00:00+08:00</published><updated>2023-12-01T00:00:00+08:00</updated><id>http://localhost:4000/2023/12/01/Nothing</id><content type="html" xml:base="http://localhost:4000/2023/12/01/Nothing.html">&lt;p&gt;Is it a progress report when there is no progress?&lt;/p&gt;

&lt;p&gt;Last month, next month and the month after:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Typescript/Babylon.js tests and prototype&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Charles</name></author><category term="Posts" /><category term="ProgressReport" /><category term="DevDiary" /><summary type="html">Is it a progress report when there is no progress?</summary></entry><entry><title type="html">Rewrite</title><link href="http://localhost:4000/2023/11/02/Rewrite.html" rel="alternate" type="text/html" title="Rewrite" /><published>2023-11-02T00:00:00+08:00</published><updated>2023-11-02T00:00:00+08:00</updated><id>http://localhost:4000/2023/11/02/Rewrite</id><content type="html" xml:base="http://localhost:4000/2023/11/02/Rewrite.html">&lt;p&gt;Over the last month I have continued rewriting my libraries for the third time, currently into Typescript, having given up on Scala. I still like Scala. It would be my favorite language to code in, if I never wanted to actually deliver anything. Unfortunately its tooling is atrocious. It is a common (and usually hyperbolic) trope to claim that a language is dying. While I’m not going to say that, mainly due to experience, the Scala community does not feel thriving. Typescript was the obvious choice since I was transpiling Scala into Javascript anyway to use the Babylon.js library. The process has been very smooth (especially the IDE tools). Still, I’m not sure its the right decision - Rust with various game engines or C# with Godot being the  other contenders.&lt;/p&gt;

&lt;p&gt;Work has been slow due to various around-the-house tasks that need to be done before the summer heat arrives. Still In a week or so I should be back where I was before going to China, but in a new language. Then I get back to implementing more prototype/test code towards the next game.&lt;/p&gt;

&lt;p&gt;Last month, next month and the month after:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Typescript/Babylon.js tests and prototype&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Charles</name></author><category term="Posts" /><category term="ProgressReport" /><category term="DevDiary" /><summary type="html">Over the last month I have continued rewriting my libraries for the third time, currently into Typescript, having given up on Scala. I still like Scala. It would be my favorite language to code in, if I never wanted to actually deliver anything. Unfortunately its tooling is atrocious. It is a common (and usually hyperbolic) trope to claim that a language is dying. While I’m not going to say that, mainly due to experience, the Scala community does not feel thriving. Typescript was the obvious choice since I was transpiling Scala into Javascript anyway to use the Babylon.js library. The process has been very smooth (especially the IDE tools). Still, I’m not sure its the right decision - Rust with various game engines or C# with Godot being the other contenders.</summary></entry><entry><title type="html">Smug Mode</title><link href="http://localhost:4000/2023/10/01/Smug-Mode.html" rel="alternate" type="text/html" title="Smug Mode" /><published>2023-10-01T00:00:00+08:00</published><updated>2023-10-01T00:00:00+08:00</updated><id>http://localhost:4000/2023/10/01/Smug-Mode</id><content type="html" xml:base="http://localhost:4000/2023/10/01/Smug-Mode.html">&lt;p&gt;I’m just back from a month-long overseas holiday. So no signiticant work has been done since the last report, and the coming month will be
spent getting back up to speed. That is the progress report, but …&lt;/p&gt;

&lt;p&gt;While I was away Unity announced a new pricing policy, suffered a huge developer backlash, and then &lt;a href=&quot;https://www.reuters.com/technology/unity-software-rolls-back-parts-new-pricing-policy-after-backlash-2023-09-22/&quot;&gt;rolled most of it back&lt;/a&gt;. The important change was the addition a of a per-install fee on all Unity games, even those that were made under a previous versions of Unity (which supposedly have unchangeable terms &amp;amp; conditions). There were also concerns around what counted as an install and how it would be measured. The rollback has kept the per-install fee, but removed the retroactivity and added a high install hurdle before fees accrue. The impression is that many developers feel this is good enough. I don’t.&lt;/p&gt;

&lt;p&gt;I have two Unity games available. Both Concealed Intent and SpaceHexDuel are written using Unity v5, first released in 2015 and last updated in 2019. Both were released long before these new fees were announced and both are far from clearing the install hurdle. So they should be safe from Unity’s capriciousness. However, the idea that Unity could change the terms of the agreement I had with them from nearly 10 years ago (when I purchased the engine, there has been no money or purchases since) just removes any trust I have in them. Honestly, fuck Unity!&lt;/p&gt;

&lt;p&gt;Luckily, I have a small headstart on abandoning Unity - thus the smugness. Back in April &lt;a href=&quot;https://www.jarrahtechnology.com/2023/04/03/Annoyance.html&quot;&gt;I wrote how I was too annoyed by Unity to keep using it&lt;/a&gt;. After a brief dalliance with Three.js I decided to use Babylon.js as my new engine. Since then I haven’t gotten far due to various distractions (like being out of the country for a month). Now there is a flood of devs away from Unity and most seem to be going to Godot. Did I make the right choice? I don’t know. Time to create some prototypes to find out!&lt;/p&gt;</content><author><name>Charles</name></author><category term="Posts" /><category term="ProgressReport" /><category term="DevDiary" /><summary type="html">I’m just back from a month-long overseas holiday. So no signiticant work has been done since the last report, and the coming month will be spent getting back up to speed. That is the progress report, but …</summary></entry><entry><title type="html">Learning</title><link href="http://localhost:4000/2023/08/01/Learning.html" rel="alternate" type="text/html" title="Learning" /><published>2023-08-01T00:00:00+08:00</published><updated>2023-08-01T00:00:00+08:00</updated><id>http://localhost:4000/2023/08/01/Learning</id><content type="html" xml:base="http://localhost:4000/2023/08/01/Learning.html">&lt;p&gt;Over the last month I have continued learning the Scala.js/Babylon.js environment by creating a prototype for my next game. Progress is slow but steady, and no blockers have been hit so far. I consider that a success. Progress will continue being slow for the next 2 months at least. Partially because it is new, and many of the familiar tools are missing, but also because there will be some large disruptions in my non-work life over the next couple of months. For that reason, do not expect a progress report next month. Although no loss, as it would just be more of the same.&lt;/p&gt;

&lt;p&gt;Last month, next month and the month after:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;More Scala.js/Babylon.js tests&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Charles</name></author><category term="Posts" /><category term="ProgressReport" /><category term="DevDiary" /><summary type="html">Over the last month I have continued learning the Scala.js/Babylon.js environment by creating a prototype for my next game. Progress is slow but steady, and no blockers have been hit so far. I consider that a success. Progress will continue being slow for the next 2 months at least. Partially because it is new, and many of the familiar tools are missing, but also because there will be some large disruptions in my non-work life over the next couple of months. For that reason, do not expect a progress report next month. Although no loss, as it would just be more of the same.</summary></entry><entry><title type="html">Bad Skink</title><link href="http://localhost:4000/2023/07/03/Bad-Skink.html" rel="alternate" type="text/html" title="Bad Skink" /><published>2023-07-03T00:00:00+08:00</published><updated>2023-07-03T00:00:00+08:00</updated><id>http://localhost:4000/2023/07/03/Bad-Skink</id><content type="html" xml:base="http://localhost:4000/2023/07/03/Bad-Skink.html">&lt;p&gt;Last month I started working on Skink, a game narrative library. Now I can annouce Skink is dead. Well, maybe not permanently dead, but dead as a reimplemetation of Ink. I just couldn’t see it working for &lt;a href=&quot;https://emshort.blog/2019/11/29/storylets-you-want-them/&quot;&gt;storylets&lt;/a&gt; (which is what I need) rather than as the engine driving a whole game (which I don’t). Unfortunately, I still spent significant time this month on it before that realisation. The rest of the month I worked on prototypes/tools for future Scala.js/Babylon.js games. I plan to continue doing that all through July too.&lt;/p&gt;

&lt;p&gt;Done last month:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Stopped work on Skink library&lt;/li&gt;
  &lt;li&gt;More Scala.js/Babylon.js tests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tasks for this month:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;More Scala.js/Babylon.js tests&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Charles</name></author><category term="Posts" /><category term="ProgressReport" /><category term="DevDiary" /><category term="Kassite" /><category term="Skink" /><summary type="html">Last month I started working on Skink, a game narrative library. Now I can annouce Skink is dead. Well, maybe not permanently dead, but dead as a reimplemetation of Ink. I just couldn’t see it working for storylets (which is what I need) rather than as the engine driving a whole game (which I don’t). Unfortunately, I still spent significant time this month on it before that realisation. The rest of the month I worked on prototypes/tools for future Scala.js/Babylon.js games. I plan to continue doing that all through July too.</summary></entry><entry><title type="html">Skink</title><link href="http://localhost:4000/2023/06/02/Skink.html" rel="alternate" type="text/html" title="Skink" /><published>2023-06-02T00:00:00+08:00</published><updated>2023-06-02T00:00:00+08:00</updated><id>http://localhost:4000/2023/06/02/Skink</id><content type="html" xml:base="http://localhost:4000/2023/06/02/Skink.html">&lt;p&gt;May seemed quite busy as I was working through it, but as expected it was not a month of great achievements. First I created some libraries out of HexTacToe to support Scala.js/Babylon.js games (see &lt;a href=&quot;https://github.com/jarrahtech/kassite&quot;&gt;Kassite on Github&lt;/a&gt;), and also some work adding Electron.js support so I could create native builds. Then I created the next IPO prototype - the first playtest went quite well (more are required). The last fortnight was spent working on Skink, a Scala reimplementation of the &lt;a href=&quot;https://github.com/inkle/ink&quot;&gt;Ink language&lt;/a&gt; for game narratives. It is an interesting project, although I’m not sure how useful it will be given I have sworn off story in my games. There was also a great deal of household tasks completed. Thankfully that todo list is much shorter now.&lt;/p&gt;

&lt;p&gt;Right now I’m focussed on finishing Skink. Or at least finished enough to be minimally useful. It is just stubborness really. I hope to have that done in a couple of weeks and after that I’m going to do some tech tests on parts of Ci2d. Plus, I’ll platest and iterate on IPO whenever possible.&lt;/p&gt;

&lt;p&gt;Done last month:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Created libraries (from HexTacToe) to support Scala.js/Babylon.js game creation&lt;/li&gt;
  &lt;li&gt;Worked on Skink library&lt;/li&gt;
  &lt;li&gt;Created next IPO prototype and tested it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tasks for this month:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Test IPO some more&lt;/li&gt;
  &lt;li&gt;Finish initial work on Skink&lt;/li&gt;
  &lt;li&gt;More Scala.js/Babylon.js tests&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Charles</name></author><category term="Posts" /><category term="ProgressReport" /><category term="DevDiary" /><category term="Kassite" /><category term="Skink" /><category term="IPO" /><category term="HexTacToe" /><summary type="html">May seemed quite busy as I was working through it, but as expected it was not a month of great achievements. First I created some libraries out of HexTacToe to support Scala.js/Babylon.js games (see Kassite on Github), and also some work adding Electron.js support so I could create native builds. Then I created the next IPO prototype - the first playtest went quite well (more are required). The last fortnight was spent working on Skink, a Scala reimplementation of the Ink language for game narratives. It is an interesting project, although I’m not sure how useful it will be given I have sworn off story in my games. There was also a great deal of household tasks completed. Thankfully that todo list is much shorter now.</summary></entry><entry><title type="html">Babylon</title><link href="http://localhost:4000/2023/05/02/Babylon.html" rel="alternate" type="text/html" title="Babylon" /><published>2023-05-02T00:00:00+08:00</published><updated>2023-05-02T00:00:00+08:00</updated><id>http://localhost:4000/2023/05/02/Babylon</id><content type="html" xml:base="http://localhost:4000/2023/05/02/Babylon.html">&lt;p&gt;Over the last month I investigated alternatives to the Unity3d game engine. In particular, the Javascript based Babylon engine (I took a look at Tyrian too, but it is 2d only so I moved on). Now there is HexTacToe, an incredibly simple hex based tic-tac-toe game created as a Scala.js and Babylon.js proof-of-concept. &lt;a href=&quot;https://www.jarrahtechnology.com/HexTacToe/&quot;&gt;Play it here&lt;/a&gt; and the &lt;a href=&quot;https://github.com/jarrahtech/HexTacToe&quot;&gt;code is on Github here&lt;/a&gt;. I still need to clean it up a bit, but the functionality is all done. The point has been proved, all these technologies play nicely together. There was the occasional frustration, but overall it went quite well. I am impressed. There is not the community or game tooling available for Babylon as for Unity. However, there are other benefits. Definitely something for me to think about. I will need to write that post on pros/cons of different engines from my point-of-view.&lt;/p&gt;

&lt;p&gt;April was the month highest gamedev hours since starting this fulltime, largely because I would not give up on the problems integrating the technologies in HexTacToe (it always felt like I was so close to getting it working, and I generally was). A nice target for me to aim for again in future, but not this coming month. There is a long list of non-gamedev tasks to get done that I have been ignoring since before going to Adelaide in March. So I’m lowering expectations for May. Gamedev-wise it will be mainly reading and experimentation.&lt;/p&gt;

&lt;p&gt;Done last month:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Updated hex lib &amp;amp; started scala ink (skink) library&lt;/li&gt;
  &lt;li&gt;HexTacToe - simple hex based tic-tac-toe game as a Scala.js and Babylon.js proof-of-concept&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tasks for this month:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Clean up HexTacToe for ideas on common libs and patterns&lt;/li&gt;
  &lt;li&gt;Next IPO prototype?&lt;/li&gt;
  &lt;li&gt;New engine experimentation?&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Charles</name></author><category term="Posts" /><category term="ProgressReport" /><category term="DevDiary" /><summary type="html">Over the last month I investigated alternatives to the Unity3d game engine. In particular, the Javascript based Babylon engine (I took a look at Tyrian too, but it is 2d only so I moved on). Now there is HexTacToe, an incredibly simple hex based tic-tac-toe game created as a Scala.js and Babylon.js proof-of-concept. Play it here and the code is on Github here. I still need to clean it up a bit, but the functionality is all done. The point has been proved, all these technologies play nicely together. There was the occasional frustration, but overall it went quite well. I am impressed. There is not the community or game tooling available for Babylon as for Unity. However, there are other benefits. Definitely something for me to think about. I will need to write that post on pros/cons of different engines from my point-of-view.</summary></entry></feed>